apiVersion: v1
kind: Service
metadata:
  name: nginx-phpfpm-example-2
spec:
  ports:
  - nodePort: 32502
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-phpfpm-example-2
  type: NodePort
---
# Create a pod containing the PHP-FPM application (php-app)
# and nginx, each mounting the `shared-files` volume to their
# respective /var/www/html directories.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-phpfpm-example-2
spec:
  template:
    metadata:
      labels:
        app: nginx-phpfpm-example-2
    spec:
      containers:
      # Our PHP-FPM application
      - image: 127.0.0.1:31500/php-app:latest
        imagePullPolicy: IfNotPresent
        name: app
        volumeMounts:
          - name: shared-files
            mountPath: /var/www
            subPath: html
        # Important! After this container has started, the PHP files
        # in our Docker image aren't in the shared volume. We need to 
        # get them into the shared volume. If we tried to write directly
        # to this volume from our Docker image the files wouldn't appear
        # in the nginx container.
        #
        # So, after the container has started, symlink the PHP files from this
        # container's local filesystem (/app -- added via the Docker image) 
        # to the shared volume, which is mounted at /var/www/html.
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "ln -s /app /var/www/html"]
      
      # Our nginx container, which uses the configuration declared above,
      # along with the files shared with the PHP-FPM app.
      - image: nginx:1.7.9
        imagePullPolicy: IfNotPresent
        name: nginx
        volumeMounts:
          - name: shared-files
            mountPath: /var/www
            subPath: html
          - name: nginx-config-volume
            mountPath: /etc/nginx/conf.d/default.conf
            mountPropagation: None
            subPath: default.conf
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 1
          periodSeconds: 1
      
      # Our volumes
      volumes:
        # Create the shared files volume to be used in both pods
        - name: shared-files
          emptyDir: {}
        - name: nginx-config-volume
          configMap:
            name: nginx-config
        
